from fastapi.testclient import TestClient

from main import app

client = TestClient(app)


def test_home():
    response = client.get("/")
    assert response.status_code == 200
    assert response.json() == {"Welcome": "Salary Prediction API Home"}


def test_predict():
    payload = {
        "age": 0.0306705573543917,
        "fnlgt": -1.0636107451560883,
        "education_num": 1.1347387637961643,
        "capital_gain": 0.1484528952174793,
        "capital_loss": -0.2166595270325901,
        "hours_per_week": -0.0354294469727769,
        "workclass_Federal_gov": 0.0,
        "workclass_Local_gov": 0.0,
        "workclass_Never_worked": 0.0,
        "workclass_Private": 0.0,
        "workclass_Self_emp_inc": 0.0,
        "workclass_Self_emp_not_inc": 0.0,
        "workclass_State_gov": 1.0,
        "workclass_Without_pay": 0.0,
        "education_11th": 0.0,
        "education_12th": 0.0,
        "education_1st_4th": 0.0,
        "education_5th_6th": 0.0,
        "education_7th_8th": 0.0,
        "education_9th": 0.0,
        "education_Assoc_acdm": 0.0,
        "education_Assoc_voc": 0.0,
        "education_Bachelors": 1.0,
        "education_Doctorate": 0.0,
        "education_HS_grad": 0.0,
        "education_Masters": 0.0,
        "education_Preschool": 0.0,
        "education_Prof_school": 0.0,
        "education_Some_college": 0.0,
        "marital_status_Married_AF_spouse": 0.0,
        "marital_status_Married_civ_spouse": 0.0,
        "marital_status_Married_spouse_absent": 0.0,
        "marital_status_Never_married": 1.0,
        "marital_status_Separated": 0.0,
        "marital_status_Widowed": 0.0,
        "occupation_Adm_clerical": 1.0,
        "occupation_Armed_Forces": 0.0,
        "occupation_Craft_repair": 0.0,
        "occupation_Exec_managerial": 0.0,
        "occupation_Farming_fishing": 0.0,
        "occupation_Handlers_cleaners": 0.0,
        "occupation_Machine_op_inspct": 0.0,
        "occupation_Other_service": 0.0,
        "occupation_Priv_house_serv": 0.0,
        "occupation_Prof_specialty": 0.0,
        "occupation_Protective_serv": 0.0,
        "occupation_Sales": 0.0,
        "occupation_Tech_support": 0.0,
        "occupation_Transport_moving": 0.0,
        "relationship_Not_in_family": 1.0,
        "relationship_Other_relative": 0.0,
        "relationship_Own_child": 0.0,
        "relationship_Unmarried": 0.0,
        "relationship_Wife": 0.0,
        "race_Asian_Pac_Islander": 0.0,
        "race_Black": 0.0,
        "race_Other": 0.0,
        "race_White": 1.0,
        "sex_Male": 1.0,
        "native_country_Cambodia": 0.0,
        "native_country_Canada": 0.0,
        "native_country_China": 0.0,
        "native_country_Columbia": 0.0,
        "native_country_Cuba": 0.0,
        "native_country_Dominican_Republic": 0.0,
        "native_country_Ecuador": 0.0,
        "native_country_El_Salvador": 0.0,
        "native_country_England": 0.0,
        "native_country_France": 0.0,
        "native_country_Germany": 0.0,
        "native_country_Greece": 0.0,
        "native_country_Guatemala": 0.0,
        "native_country_Haiti": 0.0,
        "native_country_Holand_Netherlands": 0.0,
        "native_country_Honduras": 0.0,
        "native_country_Hong": 0.0,
        "native_country_Hungary": 0.0,
        "native_country_India": 0.0,
        "native_country_Iran": 0.0,
        "native_country_Ireland": 0.0,
        "native_country_Italy": 0.0,
        "native_country_Jamaica": 0.0,
        "native_country_Japan": 0.0,
        "native_country_Laos": 0.0,
        "native_country_Mexico": 0.0,
        "native_country_Nicaragua": 0.0,
        "native_country_Outlying_US_Guam_USVI_etc": 0.0,
        "native_country_Peru": 0.0,
        "native_country_Philippines": 0.0,
        "native_country_Poland": 0.0,
        "native_country_Portugal": 0.0,
        "native_country_Puerto_Rico": 0.0,
        "native_country_Scotland": 0.0,
        "native_country_South": 0.0,
        "native_country_Taiwan": 0.0,
        "native_country_Thailand": 0.0,
        "native_country_Trinadad_Tobago": 0.0,
        "native_country_United_States": 1.0,
        "native_country_Vietnam": 0.0,
        "native_country_Yugoslavia": 0.0,
    }
    response = client.post("/predict", json=payload)
    assert response.status_code == 200
    assert response.json() == {"prediction": [0]}

def test_post_malformed():
    payload = {
        "fnlgt": -1.0636107451560883,
        "education_num": 1.1347387637961643,
        "capital_gain": 0.1484528952174793,
        "capital_loss": -0.2166595270325901,
        "hours_per_week": -0.0354294469727769,
        "workclass_Federal_gov": 0.0,
        "workclass_Local_gov": 0.0,
        "workclass_Never_worked": 0.0,
        "workclass_Private": 0.0,
        "workclass_Self_emp_inc": 0.0,
        "workclass_Self_emp_not_inc": 0.0,
        "workclass_State_gov": 1.0,
        "workclass_Without_pay": 0.0,
        "education_11th": 0.0,
        "education_12th": 0.0,
        "education_1st_4th": 0.0,
        "education_5th_6th": 0.0,
        "education_7th_8th": 0.0,
        "education_9th": 0.0,
        "education_Assoc_acdm": 0.0,
        "education_Assoc_voc": 0.0,
        "education_Bachelors": 1.0,
        "education_Doctorate": 0.0,
        "education_HS_grad": 0.0,
        "education_Masters": 0.0,
        "education_Preschool": 0.0,
        "education_Prof_school": 0.0,
        "education_Some_college": 0.0,
        "marital_status_Married_AF_spouse": 0.0,
        "marital_status_Married_civ_spouse": 0.0,
        "marital_status_Married_spouse_absent": 0.0,
        "marital_status_Never_married": 1.0,
        "marital_status_Separated": 0.0,
        "marital_status_Widowed": 0.0,
        "occupation_Adm_clerical": 1.0,
        "occupation_Armed_Forces": 0.0,
        "occupation_Craft_repair": 0.0,
        "occupation_Exec_managerial": 0.0,
        "occupation_Farming_fishing": 0.0,
        "occupation_Handlers_cleaners": 0.0,
        "occupation_Machine_op_inspct": 0.0,
        "occupation_Other_service": 0.0,
        "occupation_Priv_house_serv": 0.0,
        "occupation_Prof_specialty": 0.0,
        "occupation_Protective_serv": 0.0,
        "occupation_Sales": 0.0,
        "occupation_Tech_support": 0.0,
        "occupation_Transport_moving": 0.0,
        "relationship_Not_in_family": 1.0,
        "relationship_Other_relative": 0.0,
        "relationship_Own_child": 0.0,
        "relationship_Unmarried": 0.0,
        "relationship_Wife": 0.0,
        "race_Asian_Pac_Islander": 0.0,
        "race_Black": 0.0,
        "race_Other": 0.0,
        "race_White": 1.0,
        "sex_Male": 1.0,
        "native_country_Cambodia": 0.0,
        "native_country_Canada": 0.0,
        "native_country_China": 0.0,
        "native_country_Columbia": 0.0,
        "native_country_Cuba": 0.0,
        "native_country_Dominican_Republic": 0.0,
        "native_country_Ecuador": 0.0,
        "native_country_El_Salvador": 0.0,
        "native_country_England": 0.0,
        "native_country_France": 0.0,
        "native_country_Germany": 0.0,
        "native_country_Greece": 0.0,
        "native_country_Guatemala": 0.0,
        "native_country_Haiti": 0.0,
        "native_country_Holand_Netherlands": 0.0,
        "native_country_Honduras": 0.0,
        "native_country_Hong": 0.0,
        "native_country_Hungary": 0.0,
        "native_country_India": 0.0,
        "native_country_Iran": 0.0,
        "native_country_Ireland": 0.0,
        "native_country_Italy": 0.0,
        "native_country_Jamaica": 0.0,
        "native_country_Japan": 0.0,
        "native_country_Laos": 0.0,
        "native_country_Mexico": 0.0,
        "native_country_Nicaragua": 0.0,
        "native_country_Outlying_US_Guam_USVI_etc": 0.0,
        "native_country_Peru": 0.0,
        "native_country_Philippines": 0.0,
        "native_country_Poland": 0.0,
        "native_country_Portugal": 0.0,
        "native_country_Puerto_Rico": 0.0,
        "native_country_Scotland": 0.0,
        "native_country_South": 0.0,
        "native_country_Taiwan": 0.0,
        "native_country_Thailand": 0.0,
        "native_country_Trinadad_Tobago": 0.0,
        "native_country_United_States": 1.0,
        "native_country_Vietnam": 0.0,
        "native_country_Yugoslavia": 0.0,
    }
    response = client.post("/predict", json=payload)
    assert response.status_code != 200